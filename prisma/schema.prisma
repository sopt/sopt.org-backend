generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Logo {
  id    Int    @id(map: "project_pk") @unique(map: "project_id_uindex") @default(autoincrement())
  image String @unique(map: "logo_image_uindex") @db.VarChar(500)
}

model Leader {
  id         Int      @id(map: "leader_pk") @unique(map: "leader_id_uindex") @default(autoincrement())
  semesterId Int
  partd      Int
  name       String   @db.VarChar(10)
  content    String?
  image      String?  @db.VarChar(500)
  Part       Part     @relation(fields: [partd], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "leader_part_id_fk")
  Semester   Semester @relation(fields: [semesterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "leader_semester_id_fk")
}

model Member {
  id         Int      @id(map: "member_pk") @unique(map: "member_id_uindex") @default(autoincrement())
  semesterId Int
  partId     Int
  count      Int
  Part       Part     @relation(fields: [partId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_part_id_fk")
  Semester   Semester @relation(fields: [semesterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "member_semester_id_fk")
}

model Part {
  id     Int      @id(map: "part_pk") @unique(map: "part_id_uindex") @default(autoincrement())
  name   String   @unique(map: "part_name_uindex") @db.VarChar(15)
  Leader Leader[]
  Member Member[]
}

model Semester {
  id      Int      @id(map: "semester_pk") @unique(map: "semester_id_uindex") @default(autoincrement())
  history String?
  Leader  Leader[]
  Member  Member[]
}
